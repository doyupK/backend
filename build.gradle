buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}



plugins {
    id 'org.springframework.boot' version '2.7.0'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    //querydsl 추가
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.tutti'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'mysql:mysql-connector-java'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'


    //	Validator
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    //	이메일
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-mail', version: '2.2.6.RELEASE'

    //	JWT
    compileOnly 'com.auth0:java-jwt:3.13.0'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    implementation group: 'com.auth0', name: 'java-jwt', version: '3.10.3'
    implementation group: 'org.javassist', name: 'javassist', version: '3.15.0-GA'
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
    implementation 'commons-codec:commons-codec:1.13'

    //s3
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

    //querydsl 추가
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    implementation "com.querydsl:querydsl-apt:${queryDslVersion}"

    //embedded-redis
//    implementation  group: 'it.ozimov', name: 'embedded-redis', version: '0.7.2'
//
//    implementation 'org.springframework.boot:spring-boot-starter-data-redis'


    //prometheus
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.micrometer:micrometer-core'
    implementation 'io.micrometer:micrometer-registry-prometheus'
    implementation 'javax.interceptor:javax.interceptor-api:1.2.2'

    //로그
    compile group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.29'
//    // slf4j & logback
//    implementation('org.slf4j:jcl-over-slf4j')
//    implementation('ch.qos.logback:logback-classic')

    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-aop
    // Method Run Time Metrics
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-aop', version: '2.6.6'


}

//querydsl에서 사용할 경로를 선언
def querydslDir = "$buildDir/generated/querydsl"


//querydsl 설정을 추가합니다. JPA 사용 여부와 사용할 경로
querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
//build시 사용할 sourceSet
sourceSets {
    main.java.srcDir querydslDir
}
//querydsl이 compileClassPath를 상속하도록 설정
configurations {
    querydsl.extendsFrom compileClasspath
}
//querydsl 컴파일시 사용할 옵션을 설정
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}


//
//tasks.named('test') {
//    useJUnitPlatform()
//}


jar {
    enabled = false
}

bootJar{
    archivesBaseName = 'app'
    archiveFileName = 'app.jar'
    archiveVersion = "0.0.0"
}

//configurations {
//    all {
//        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
//    }
//}